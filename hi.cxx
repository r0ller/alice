// generated by Fast Light User Interface Designer (fluid) version 1.0110

#include "hi.h"
#include <stdio.h>
#include "sqlite3.h"
#include "hilib.h"

void translate_cb(Fl_Widget *, void *) {
  const char *command_str,*translation_str;

command_str=command->value();
translation_str=hi(command_str);
if(!translation_str)translation->value("Invalid command");
else translation->value(translation_str);
}

void execute_cb(Fl_Widget *, void *) {
  FILE *fp;
char line[130], command_str[4096]="";

sprintf(command_str,"%s 2>&1",translation->value());
display->insert(translation->value());
display->insert("\n");
fp=popen(command_str,"r");
while(fgets(line,sizeof line,fp))
{
  display->insert(line);
}
pclose(fp);
}

Fl_Input *command=(Fl_Input *)0;

Fl_Input *translation=(Fl_Input *)0;

Fl_Button *translate_button=(Fl_Button *)0;

Fl_Button *execute_button=(Fl_Button *)0;

Fl_Text_Display *display=(Fl_Text_Display *)0;

int main(int argc, char **argv) {
  Fl_Double_Window* w;
  sqlite3 *db;
char *errmsg;

if(sqlite3_open("",&db)){
  sqlite3_errmsg(db);
  sqlite3_close(db);
}
sqlite3_exec(db,"",0,0,&errmsg);
sqlite3_close(db);
  { Fl_Double_Window* o = new Fl_Double_Window(545, 300, "Human Interface");
    w = o;
    { command = new Fl_Input(95, 15, 365, 25, "Command:");
    } // Fl_Input* command
    { translation = new Fl_Input(95, 45, 365, 25, "Translation:");
    } // Fl_Input* translation
    { translate_button = new Fl_Button(465, 20, 75, 20, "Translate!");
      translate_button->callback((Fl_Callback*)translate_cb);
    } // Fl_Button* translate_button
    { execute_button = new Fl_Button(465, 45, 75, 20, "Execute!");
      execute_button->callback((Fl_Callback*)execute_cb);
    } // Fl_Button* execute_button
    { display = new Fl_Text_Display(5, 75, 535, 220, "Execution Display:");
      display->align(FL_ALIGN_CENTER);
      Fl_Group::current()->resizable(display);
      Fl_Text_Buffer *textbuffer = new Fl_Text_Buffer();
      display->buffer(textbuffer);
    } // Fl_Text_Display* display
    o->end();
  } // Fl_Double_Window* o
  w->show(argc, argv);
  return Fl::run();
}
